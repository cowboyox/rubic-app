// ****** mixins ******

@mixin font-face(
  $font-family,
  $file-path,
  $weight: normal,
  $style: normal,
  $asset-pipeline: false
) {
  @font-face {
    font-weight: $weight;
    font-family: $font-family;
    font-style: $style;
    font-display: swap;

    @if $asset-pipeline==true {
      src: font-url('#{$file-path}.woff2') format('woff2'),
        font-url('#{$file-path}.woff') format('woff'), font-url('#{$file-path}.eot'),
        font-url('#{$file-path}.ttf') format('truetype');
    } @else {
      src: url('#{$file-path}.woff2') format('woff2'), url('#{$file-path}.woff') format('woff'),
        url('#{$file-path}.eot'), url('#{$file-path}.ttf') format('truetype');
    }
  }
}



@mixin clearfix {
  &::after {
    display: block;
    clear: both;

    content: ' ';
  }
}

@mixin iframe-horizontal {
  :host-context(html.iframe-horizontal) & {
    @content;
  }
}

@mixin iframe-vertical {
  :host-context(html.iframe-vertical) & {
    @content;
  }
}

@mixin iframe {
  :host-context(html.iframe) & {
    @content;
  }
}

// breakpoints
@mixin b($point) {
  @if $point==desktop {
    @media (max-width: 1366px) and (min-width: 1024px) {
      @content;
    }
  } @else if $point==tablet {
    @media (max-width: 1000px) {
      @content;
    }
  } @else if $point==mobile {
    @media (max-width: 767px) {
      @content;
    }
  } @else if $point==mobile3x {
    @media only screen and (-webkit-min-device-pixel-ratio: 3),
      only screen and (min-resolution: 3dppx),
      only screen and (min-resolution: 350dpi) {
      @content;
    }
  } @else {
    @media (max-width: $point + 'px') {
      @content;
    }
  }
}

// breakpoints
@mixin bb($pointMax, $pointMin) {
  @media (max-width: $pointMax + 'px') and (min-width: $pointMin + 'px') {
    @content;
  }
}


@mixin before-img($display, $width, $height, $position) {
  @at-root #{&}:before {
    display: $display;

    width: $width;
    height: $height;

    content: '';

    @if $position==a {
      position: absolute;
    }

    @if $position==r {
      position: relative;
    }
    @content;
  }
}

@mixin after-img($display, $width, $height, $position) {
  @at-root #{&}:after {
    display: $display;

    width: $width;
    height: $height;

    content: '';

    @if $position==a {
      position: absolute;
    }

    @if $position==r {
      position: relative;
    }
    @content;
  }
}
